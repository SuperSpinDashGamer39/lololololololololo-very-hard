// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_SongMetaTags
#include <SongMetaTags.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_lime_utils_Assets
#include <lime/utils/Assets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dfc6595aea0da6e0_18_new,"SongMetaTags","new",0x9cf141c5,"SongMetaTags.new","SongMetaTags.hx",18,0x0d54dd4b)
HX_LOCAL_STACK_FRAME(_hx_pos_dfc6595aea0da6e0_56_start,"SongMetaTags","start",0x97f3c907,"SongMetaTags.start","SongMetaTags.hx",56,0x0d54dd4b)
HX_LOCAL_STACK_FRAME(_hx_pos_dfc6595aea0da6e0_51_start,"SongMetaTags","start",0x97f3c907,"SongMetaTags.start","SongMetaTags.hx",51,0x0d54dd4b)

void SongMetaTags_obj::__construct(Float _x,Float _y,::String _song){
            	HX_GC_STACKFRAME(&_hx_pos_dfc6595aea0da6e0_18_new)
HXLINE(  23)		this->fontSize = 24;
HXLINE(  22)		this->size = ((Float)0);
HXLINE(  21)		this->meta = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  27)		super::__construct(_x,_y,null());
HXLINE(  29)		 ::flixel::text::FlxText text =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,0,0,0,HX_("",00,00,00,00),this->fontSize,null());
HXLINE(  30)		text->setFormat(HX_("assets/fonts/vcr.ttf",46,38,26,7e),this->fontSize,-1,HX_("left",07,08,b0,47),::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn(),-16777216,null());
HXLINE(  32)		text->set_text(::lime::utils::Assets_obj::getText(((HX_("assets/data/",f9,10,73,a0) + _song.toLowerCase()) + HX_("/meta.txt",76,17,c9,d6))));
HXLINE(  34)		this->size = text->get_fieldWidth();
HXLINE(  36)		 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(( (Float)(this->fontSize) ) / ( (Float)(-2) )),(( (Float)(this->fontSize) ) / ( (Float)(-2) )),null());
HXDLIN(  36)		int bg1 = ::Math_obj::floor((this->size + this->fontSize));
HXDLIN(  36)		Float bg2 = text->get_height();
HXDLIN(  36)		 ::flixel::FlxSprite bg3 = bg->makeGraphic(bg1,::Math_obj::floor((bg2 + this->fontSize)),-16777216,null(),null());
HXLINE(  37)		bg3->set_alpha(((Float)0.67));
HXLINE(  39)		{
HXLINE(  39)			 ::flixel::text::FlxText _g = text;
HXDLIN(  39)			_g->set_text((_g->text + HX_("\n",0a,00,00,00)));
            		}
HXLINE(  41)		this->add(bg3);
HXLINE(  42)		this->add(text);
HXLINE(  44)		{
HXLINE(  44)			 ::SongMetaTags _g1 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  44)			_g1->set_x((_g1->x - this->size));
            		}
HXLINE(  45)		this->set_visible(false);
            	}

Dynamic SongMetaTags_obj::__CreateEmpty() { return new SongMetaTags_obj; }

void *SongMetaTags_obj::_hx_vtable = 0;

Dynamic SongMetaTags_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SongMetaTags_obj > _hx_result = new SongMetaTags_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool SongMetaTags_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x0d501cdb) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0d501cdb;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void SongMetaTags_obj::start(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::SongMetaTags,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween twn){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::SongMetaTags,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::tweens::FlxTween twn){
            				HX_STACKFRAME(&_hx_pos_dfc6595aea0da6e0_56_start)
HXLINE(  56)				_gthis->destroy();
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_dfc6595aea0da6e0_56_start)
HXLINE(  56)			::flixel::tweens::FlxTween_obj::tween(_gthis, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("x",78,00,00,00),(_gthis->x - _gthis->size))),1, ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("startDelay",c1,af,3d,f3),2)
            				->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quintIn_dyn())
            				->setFixed(2,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_dfc6595aea0da6e0_51_start)
HXDLIN(  51)		 ::SongMetaTags _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  53)		this->set_visible(true);
HXLINE(  55)		::flixel::tweens::FlxTween_obj::tween(::hx::ObjectPtr<OBJ_>(this), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("x",78,00,00,00),((this->x + this->size) + (( (Float)(this->fontSize) ) / ( (Float)(2) ))))),1, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quintOut_dyn())
            			->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_1(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(SongMetaTags_obj,start,(void))


::hx::ObjectPtr< SongMetaTags_obj > SongMetaTags_obj::__new(Float _x,Float _y,::String _song) {
	::hx::ObjectPtr< SongMetaTags_obj > __this = new SongMetaTags_obj();
	__this->__construct(_x,_y,_song);
	return __this;
}

::hx::ObjectPtr< SongMetaTags_obj > SongMetaTags_obj::__alloc(::hx::Ctx *_hx_ctx,Float _x,Float _y,::String _song) {
	SongMetaTags_obj *__this = (SongMetaTags_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SongMetaTags_obj), true, "SongMetaTags"));
	*(void **)__this = SongMetaTags_obj::_hx_vtable;
	__this->__construct(_x,_y,_song);
	return __this;
}

SongMetaTags_obj::SongMetaTags_obj()
{
}

void SongMetaTags_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SongMetaTags);
	HX_MARK_MEMBER_NAME(meta,"meta");
	HX_MARK_MEMBER_NAME(size,"size");
	HX_MARK_MEMBER_NAME(fontSize,"fontSize");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void SongMetaTags_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(meta,"meta");
	HX_VISIT_MEMBER_NAME(size,"size");
	HX_VISIT_MEMBER_NAME(fontSize,"fontSize");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val SongMetaTags_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"meta") ) { return ::hx::Val( meta ); }
		if (HX_FIELD_EQ(inName,"size") ) { return ::hx::Val( size ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { return ::hx::Val( start_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fontSize") ) { return ::hx::Val( fontSize ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val SongMetaTags_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"meta") ) { meta=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"size") ) { size=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fontSize") ) { fontSize=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SongMetaTags_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("meta",c5,4a,59,48));
	outFields->push(HX_("size",c1,a0,53,4c));
	outFields->push(HX_("fontSize",30,be,d1,ce));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo SongMetaTags_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(SongMetaTags_obj,meta),HX_("meta",c5,4a,59,48)},
	{::hx::fsFloat,(int)offsetof(SongMetaTags_obj,size),HX_("size",c1,a0,53,4c)},
	{::hx::fsInt,(int)offsetof(SongMetaTags_obj,fontSize),HX_("fontSize",30,be,d1,ce)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *SongMetaTags_obj_sStaticStorageInfo = 0;
#endif

static ::String SongMetaTags_obj_sMemberFields[] = {
	HX_("meta",c5,4a,59,48),
	HX_("size",c1,a0,53,4c),
	HX_("fontSize",30,be,d1,ce),
	HX_("start",62,74,0b,84),
	::String(null()) };

::hx::Class SongMetaTags_obj::__mClass;

void SongMetaTags_obj::__register()
{
	SongMetaTags_obj _hx_dummy;
	SongMetaTags_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("SongMetaTags",53,fb,d9,bf);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(SongMetaTags_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< SongMetaTags_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SongMetaTags_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SongMetaTags_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

