// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_ComboPopup
#include <ComboPopup.h>
#endif
#ifndef INCLUDED_Conductor
#include <Conductor.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_071b8be456fac389_10_new,"ComboPopup","new",0x32d60310,"ComboPopup.new","ComboPopup.hx",10,0x0cdb0e60)
static const Float _hx_array_data_cb3b7b1e_1[] = {
	0.0,0.0,
};
static const Float _hx_array_data_cb3b7b1e_2[] = {
	0.0,0.0,
};
static const Float _hx_array_data_cb3b7b1e_3[] = {
	0.0,0.0,
};
static const Float _hx_array_data_cb3b7b1e_4[] = {
	0.7,0.6,0.6,
};
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_62_setScales,"ComboPopup","setScales",0x63c2b69b,"ComboPopup.setScales","ComboPopup.hx",62,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_81_comboPopup,"ComboPopup","comboPopup",0x0340fa4e,"ComboPopup.comboPopup","ComboPopup.hx",81,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_104_comboPopup,"ComboPopup","comboPopup",0x0340fa4e,"ComboPopup.comboPopup","ComboPopup.hx",104,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_138_ratingPopup,"ComboPopup","ratingPopup",0x62119f7f,"ComboPopup.ratingPopup","ComboPopup.hx",138,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_118_ratingPopup,"ComboPopup","ratingPopup",0x62119f7f,"ComboPopup.ratingPopup","ComboPopup.hx",118,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_164_breakPopup,"ComboPopup","breakPopup",0x2f34443d,"ComboPopup.breakPopup","ComboPopup.hx",164,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_150_breakPopup,"ComboPopup","breakPopup",0x2f34443d,"ComboPopup.breakPopup","ComboPopup.hx",150,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_29_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",29,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_30_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",30,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_31_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",31,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_32_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",32,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_34_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",34,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_35_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",35,0x0cdb0e60)
HX_LOCAL_STACK_FRAME(_hx_pos_071b8be456fac389_37_boot,"ComboPopup","boot",0x4085ab82,"ComboPopup.boot","ComboPopup.hx",37,0x0cdb0e60)
static const ::String _hx_array_data_cb3b7b1e_20[] = {
	HX_("sick",be,8c,53,4c),HX_("good",3d,95,69,44),HX_("bad",c5,b1,4a,00),HX_("shit",c0,cf,52,4c),
};

void ComboPopup_obj::__construct(Float _x,Float _y,::cpp::VirtualArray _ratingInfo,::cpp::VirtualArray _numberInfo,::cpp::VirtualArray _comboBreakInfo,::Array< Float > _scale){
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_10_new)
HXLINE(  22)		this->velocityScale = ((Float)1);
HXLINE(  21)		this->accelScale = ((Float)1);
HXLINE(  19)		this->breakScale = ((Float)0.6);
HXLINE(  18)		this->numberScale = ((Float)0.6);
HXLINE(  17)		this->ratingScale = ((Float)0.7);
HXLINE(  15)		this->breakPosition = ::Array_obj< Float >::fromData( _hx_array_data_cb3b7b1e_1,2);
HXLINE(  14)		this->numberPosition = ::Array_obj< Float >::fromData( _hx_array_data_cb3b7b1e_2,2);
HXLINE(  13)		this->ratingPosition = ::Array_obj< Float >::fromData( _hx_array_data_cb3b7b1e_3,2);
HXLINE(  45)		super::__construct(_x,_y,null());
HXLINE(  47)		this->ratingInfo = _ratingInfo;
HXLINE(  48)		this->numberInfo = _numberInfo;
HXLINE(  49)		this->comboBreakInfo = _comboBreakInfo;
HXLINE(  51)		if (::hx::IsNull( _scale )) {
HXLINE(  52)			_scale = ::Array_obj< Float >::fromData( _hx_array_data_cb3b7b1e_4,3);
            		}
HXLINE(  55)		this->setScales(_scale,false);
            	}

Dynamic ComboPopup_obj::__CreateEmpty() { return new ComboPopup_obj; }

void *ComboPopup_obj::_hx_vtable = 0;

Dynamic ComboPopup_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ComboPopup_obj > _hx_result = new ComboPopup_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5]);
	return _hx_result;
}

bool ComboPopup_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x222fa442) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x222fa442;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void ComboPopup_obj::setScales(::Array< Float > _scale, ::Dynamic __o_positionReset){
            		 ::Dynamic positionReset = __o_positionReset;
            		if (::hx::IsNull(__o_positionReset)) positionReset = true;
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_62_setScales)
HXLINE(  64)		if (( (bool)(positionReset) )) {
HXLINE(  65)			::Array< Float > _hx_tmp = this->numberPosition;
HXDLIN(  65)			int _hx_tmp1 = ::ComboPopup_obj::Y;
HXDLIN(  65)			_hx_tmp[_hx_tmp1] = (_hx_tmp->__get(_hx_tmp1) - ((( (Float)(this->numberInfo->__get(::ComboPopup_obj::HEIGHT)) ) * this->numberScale) * ((Float)1.6)));
HXLINE(  66)			::Array< Float > _hx_tmp2 = this->breakPosition;
HXDLIN(  66)			int _hx_tmp3 = ::ComboPopup_obj::Y;
HXDLIN(  66)			_hx_tmp2[_hx_tmp3] = (_hx_tmp2->__get(_hx_tmp3) + ((( (Float)(this->comboBreakInfo->__get(::ComboPopup_obj::HEIGHT)) ) * this->breakScale) / ( (Float)(2) )));
            		}
HXLINE(  69)		this->ratingScale = _scale->__get(0);
HXLINE(  70)		this->numberScale = _scale->__get(1);
HXLINE(  71)		this->breakScale = _scale->__get(2);
HXLINE(  73)		::Array< Float > _hx_tmp = this->numberPosition;
HXDLIN(  73)		int _hx_tmp1 = ::ComboPopup_obj::Y;
HXDLIN(  73)		_hx_tmp[_hx_tmp1] = (_hx_tmp->__get(_hx_tmp1) + ((( (Float)(this->numberInfo->__get(::ComboPopup_obj::HEIGHT)) ) * this->numberScale) * ((Float)1.6)));
HXLINE(  74)		::Array< Float > _hx_tmp2 = this->breakPosition;
HXDLIN(  74)		int _hx_tmp3 = ::ComboPopup_obj::Y;
HXDLIN(  74)		_hx_tmp2[_hx_tmp3] = (_hx_tmp2->__get(_hx_tmp3) - ((( (Float)(this->comboBreakInfo->__get(::ComboPopup_obj::HEIGHT)) ) * this->breakScale) / ( (Float)(2) )));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ComboPopup_obj,setScales,(void))

void ComboPopup_obj::comboPopup(int _combo){
            	HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_81_comboPopup)
HXLINE(  83)		if ((_combo < 0)) {
HXLINE(  83)			return;
            		}
HXLINE(  85)		::String combo = ::Std_obj::string(_combo);
HXLINE(  87)		{
HXLINE(  87)			int _g = 0;
HXDLIN(  87)			int _g1 = combo.length;
HXDLIN(  87)			while((_g < _g1)){
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,digit1) HXARGC(1)
            				void _hx_run( ::flixel::tweens::FlxTween tween){
            					HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_104_comboPopup)
HXLINE( 104)					digit1->destroy();
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE(  87)				_g = (_g + 1);
HXDLIN(  87)				int i = (_g - 1);
HXLINE(  89)				 ::flixel::FlxSprite digit =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(this->numberPosition->__get(::ComboPopup_obj::X) + ((( (Float)(this->numberInfo->__get(::ComboPopup_obj::WIDTH)) ) * this->numberScale) * ( (Float)(i) ))),this->numberPosition->__get(::ComboPopup_obj::Y),null());
HXDLIN(  89)				 ::flixel::FlxSprite digit1 = digit->loadGraphic(this->numberInfo->__get(::ComboPopup_obj::GRAPHIC),true,this->numberInfo->__get(::ComboPopup_obj::WIDTH),this->numberInfo->__get(::ComboPopup_obj::HEIGHT),null(),null());
HXLINE(  90)				 ::flixel::FlxSprite digit2 = digit1;
HXDLIN(  90)				Float _hx_tmp = digit1->get_width();
HXDLIN(  90)				digit2->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * this->numberScale)),null());
HXLINE(  91)				digit1->set_antialiasing(( (bool)(this->numberInfo->__get(::ComboPopup_obj::AA)) ));
HXLINE(  93)				 ::flixel::animation::FlxAnimationController digit3 = digit1->animation;
HXDLIN(  93)				digit3->add(HX_("digit",ad,ed,c7,d9),::Array_obj< int >::__new(1)->init(0,::Std_obj::parseInt(combo.charAt(i))),0,false,null(),null());
HXLINE(  94)				digit1->animation->play(HX_("digit",ad,ed,c7,d9),null(),null(),null());
HXLINE(  96)				this->add(digit1);
HXLINE(  98)				 ::flixel::math::FlxPoint digit4 = digit1->acceleration;
HXDLIN(  98)				int _hx_tmp1 = ::flixel::FlxG_obj::random->_hx_int(150,250,null());
HXDLIN(  98)				digit4->set_y((( (Float)(_hx_tmp1) ) * this->accelScale));
HXLINE(  99)				{
HXLINE(  99)					 ::flixel::math::FlxPoint _g1 = digit1->velocity;
HXDLIN(  99)					Float _g2 = _g1->y;
HXDLIN(  99)					int _hx_tmp2 = ::flixel::FlxG_obj::random->_hx_int(100,130,null());
HXDLIN(  99)					_g1->set_y((_g2 - (( (Float)(_hx_tmp2) ) * this->velocityScale)));
            				}
HXLINE( 100)				 ::flixel::math::FlxPoint digit5 = digit1->velocity;
HXDLIN( 100)				int _hx_tmp3 = ::flixel::FlxG_obj::random->_hx_int(-5,5,null());
HXDLIN( 100)				digit5->set_x((( (Float)(_hx_tmp3) ) * this->velocityScale));
HXLINE( 102)				::flixel::tweens::FlxTween_obj::tween(digit1, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.2), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),(::Conductor_obj::crochet * ((Float)0.00075)))
            					->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(digit1)))));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComboPopup_obj,comboPopup,(void))

void ComboPopup_obj::ratingPopup(::String _rating){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,ratingSprite1) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween tween){
            			HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_138_ratingPopup)
HXLINE( 138)			ratingSprite1->destroy();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_118_ratingPopup)
HXLINE( 120)		int rating = ::ComboPopup_obj::ratingList->indexOf(_rating,null());
HXLINE( 121)		if ((rating == -1)) {
HXLINE( 121)			return;
            		}
HXLINE( 123)		 ::flixel::FlxSprite ratingSprite =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,this->ratingPosition->__get(::ComboPopup_obj::X),this->ratingPosition->__get(::ComboPopup_obj::Y),null());
HXDLIN( 123)		 ::flixel::FlxSprite ratingSprite1 = ratingSprite->loadGraphic(this->ratingInfo->__get(::ComboPopup_obj::GRAPHIC),true,this->ratingInfo->__get(::ComboPopup_obj::WIDTH),this->ratingInfo->__get(::ComboPopup_obj::HEIGHT),null(),null());
HXLINE( 124)		 ::flixel::FlxSprite ratingSprite2 = ratingSprite1;
HXDLIN( 124)		Float _hx_tmp = ratingSprite1->get_width();
HXDLIN( 124)		ratingSprite2->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * this->ratingScale)),null());
HXLINE( 125)		ratingSprite1->set_antialiasing(( (bool)(this->ratingInfo->__get(::ComboPopup_obj::AA)) ));
HXLINE( 127)		ratingSprite1->animation->add(HX_("rating",1d,34,8a,bb),::Array_obj< int >::__new(1)->init(0,rating),0,false,null(),null());
HXLINE( 128)		ratingSprite1->animation->play(HX_("rating",1d,34,8a,bb),null(),null(),null());
HXLINE( 130)		ratingSprite1->acceleration->set_y((( (Float)(250) ) * this->accelScale));
HXLINE( 131)		{
HXLINE( 131)			 ::flixel::math::FlxPoint _g = ratingSprite1->velocity;
HXDLIN( 131)			Float _g1 = _g->y;
HXDLIN( 131)			int _hx_tmp1 = ::flixel::FlxG_obj::random->_hx_int(100,130,null());
HXDLIN( 131)			_g->set_y((_g1 - (( (Float)(_hx_tmp1) ) * this->velocityScale)));
            		}
HXLINE( 132)		{
HXLINE( 132)			 ::flixel::math::FlxPoint _g2 = ratingSprite1->velocity;
HXDLIN( 132)			Float _g3 = _g2->x;
HXDLIN( 132)			int _hx_tmp2 = ::flixel::FlxG_obj::random->_hx_int(-5,5,null());
HXDLIN( 132)			_g2->set_x((_g3 - (( (Float)(_hx_tmp2) ) * this->velocityScale)));
            		}
HXLINE( 134)		this->add(ratingSprite1);
HXLINE( 136)		::flixel::tweens::FlxTween_obj::tween(ratingSprite1, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.2), ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("startDelay",c1,af,3d,f3),(::Conductor_obj::crochet * ((Float)0.00075)))
            			->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(ratingSprite1)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComboPopup_obj,ratingPopup,(void))

void ComboPopup_obj::breakPopup(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,breakSprite1) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween tween){
            			HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_164_breakPopup)
HXLINE( 164)			breakSprite1->destroy();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_071b8be456fac389_150_breakPopup)
HXLINE( 152)		 ::flixel::FlxSprite breakSprite =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,this->breakPosition->__get(::ComboPopup_obj::X),this->breakPosition->__get(::ComboPopup_obj::Y),null());
HXDLIN( 152)		 ::flixel::FlxSprite breakSprite1 = breakSprite->loadGraphic(this->comboBreakInfo->__get(::ComboPopup_obj::GRAPHIC),null(),null(),null(),null(),null());
HXLINE( 153)		 ::flixel::FlxSprite breakSprite2 = breakSprite1;
HXDLIN( 153)		Float _hx_tmp = breakSprite1->get_width();
HXDLIN( 153)		breakSprite2->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * this->breakScale)),null());
HXLINE( 154)		breakSprite1->set_antialiasing(( (bool)(this->ratingInfo->__get(::ComboPopup_obj::AA)) ));
HXLINE( 156)		breakSprite1->acceleration->set_y((( (Float)(300) ) * this->accelScale));
HXLINE( 157)		{
HXLINE( 157)			 ::flixel::math::FlxPoint _g = breakSprite1->velocity;
HXDLIN( 157)			Float _g1 = _g->y;
HXDLIN( 157)			int _hx_tmp1 = ::flixel::FlxG_obj::random->_hx_int(80,130,null());
HXDLIN( 157)			_g->set_y((_g1 - (( (Float)(_hx_tmp1) ) * this->velocityScale)));
            		}
HXLINE( 158)		{
HXLINE( 158)			 ::flixel::math::FlxPoint _g2 = breakSprite1->velocity;
HXDLIN( 158)			Float _g3 = _g2->x;
HXDLIN( 158)			int _hx_tmp2 = ::flixel::FlxG_obj::random->_hx_int(-5,5,null());
HXDLIN( 158)			_g2->set_x((_g3 - (( (Float)(_hx_tmp2) ) * this->velocityScale)));
            		}
HXLINE( 160)		this->add(breakSprite1);
HXLINE( 162)		::flixel::tweens::FlxTween_obj::tween(breakSprite1, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.2), ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("startDelay",c1,af,3d,f3),(::Conductor_obj::crochet * ((Float)0.0015)))
            			->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(breakSprite1)))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ComboPopup_obj,breakPopup,(void))

int ComboPopup_obj::GRAPHIC;

int ComboPopup_obj::WIDTH;

int ComboPopup_obj::HEIGHT;

int ComboPopup_obj::AA;

int ComboPopup_obj::X;

int ComboPopup_obj::Y;

::Array< ::String > ComboPopup_obj::ratingList;


::hx::ObjectPtr< ComboPopup_obj > ComboPopup_obj::__new(Float _x,Float _y,::cpp::VirtualArray _ratingInfo,::cpp::VirtualArray _numberInfo,::cpp::VirtualArray _comboBreakInfo,::Array< Float > _scale) {
	::hx::ObjectPtr< ComboPopup_obj > __this = new ComboPopup_obj();
	__this->__construct(_x,_y,_ratingInfo,_numberInfo,_comboBreakInfo,_scale);
	return __this;
}

::hx::ObjectPtr< ComboPopup_obj > ComboPopup_obj::__alloc(::hx::Ctx *_hx_ctx,Float _x,Float _y,::cpp::VirtualArray _ratingInfo,::cpp::VirtualArray _numberInfo,::cpp::VirtualArray _comboBreakInfo,::Array< Float > _scale) {
	ComboPopup_obj *__this = (ComboPopup_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ComboPopup_obj), true, "ComboPopup"));
	*(void **)__this = ComboPopup_obj::_hx_vtable;
	__this->__construct(_x,_y,_ratingInfo,_numberInfo,_comboBreakInfo,_scale);
	return __this;
}

ComboPopup_obj::ComboPopup_obj()
{
}

void ComboPopup_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ComboPopup);
	HX_MARK_MEMBER_NAME(ratingPosition,"ratingPosition");
	HX_MARK_MEMBER_NAME(numberPosition,"numberPosition");
	HX_MARK_MEMBER_NAME(breakPosition,"breakPosition");
	HX_MARK_MEMBER_NAME(ratingScale,"ratingScale");
	HX_MARK_MEMBER_NAME(numberScale,"numberScale");
	HX_MARK_MEMBER_NAME(breakScale,"breakScale");
	HX_MARK_MEMBER_NAME(accelScale,"accelScale");
	HX_MARK_MEMBER_NAME(velocityScale,"velocityScale");
	HX_MARK_MEMBER_NAME(ratingInfo,"ratingInfo");
	HX_MARK_MEMBER_NAME(numberInfo,"numberInfo");
	HX_MARK_MEMBER_NAME(comboBreakInfo,"comboBreakInfo");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ComboPopup_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(ratingPosition,"ratingPosition");
	HX_VISIT_MEMBER_NAME(numberPosition,"numberPosition");
	HX_VISIT_MEMBER_NAME(breakPosition,"breakPosition");
	HX_VISIT_MEMBER_NAME(ratingScale,"ratingScale");
	HX_VISIT_MEMBER_NAME(numberScale,"numberScale");
	HX_VISIT_MEMBER_NAME(breakScale,"breakScale");
	HX_VISIT_MEMBER_NAME(accelScale,"accelScale");
	HX_VISIT_MEMBER_NAME(velocityScale,"velocityScale");
	HX_VISIT_MEMBER_NAME(ratingInfo,"ratingInfo");
	HX_VISIT_MEMBER_NAME(numberInfo,"numberInfo");
	HX_VISIT_MEMBER_NAME(comboBreakInfo,"comboBreakInfo");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ComboPopup_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"setScales") ) { return ::hx::Val( setScales_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"breakScale") ) { return ::hx::Val( breakScale ); }
		if (HX_FIELD_EQ(inName,"accelScale") ) { return ::hx::Val( accelScale ); }
		if (HX_FIELD_EQ(inName,"ratingInfo") ) { return ::hx::Val( ratingInfo ); }
		if (HX_FIELD_EQ(inName,"numberInfo") ) { return ::hx::Val( numberInfo ); }
		if (HX_FIELD_EQ(inName,"comboPopup") ) { return ::hx::Val( comboPopup_dyn() ); }
		if (HX_FIELD_EQ(inName,"breakPopup") ) { return ::hx::Val( breakPopup_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ratingScale") ) { return ::hx::Val( ratingScale ); }
		if (HX_FIELD_EQ(inName,"numberScale") ) { return ::hx::Val( numberScale ); }
		if (HX_FIELD_EQ(inName,"ratingPopup") ) { return ::hx::Val( ratingPopup_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"breakPosition") ) { return ::hx::Val( breakPosition ); }
		if (HX_FIELD_EQ(inName,"velocityScale") ) { return ::hx::Val( velocityScale ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ratingPosition") ) { return ::hx::Val( ratingPosition ); }
		if (HX_FIELD_EQ(inName,"numberPosition") ) { return ::hx::Val( numberPosition ); }
		if (HX_FIELD_EQ(inName,"comboBreakInfo") ) { return ::hx::Val( comboBreakInfo ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ComboPopup_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"X") ) { outValue = ( X ); return true; }
		if (HX_FIELD_EQ(inName,"Y") ) { outValue = ( Y ); return true; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"AA") ) { outValue = ( AA ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"WIDTH") ) { outValue = ( WIDTH ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"HEIGHT") ) { outValue = ( HEIGHT ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"GRAPHIC") ) { outValue = ( GRAPHIC ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"ratingList") ) { outValue = ( ratingList ); return true; }
	}
	return false;
}

::hx::Val ComboPopup_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"breakScale") ) { breakScale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"accelScale") ) { accelScale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ratingInfo") ) { ratingInfo=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"numberInfo") ) { numberInfo=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ratingScale") ) { ratingScale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"numberScale") ) { numberScale=inValue.Cast< Float >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"breakPosition") ) { breakPosition=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"velocityScale") ) { velocityScale=inValue.Cast< Float >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ratingPosition") ) { ratingPosition=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"numberPosition") ) { numberPosition=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"comboBreakInfo") ) { comboBreakInfo=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ComboPopup_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"X") ) { X=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"Y") ) { Y=ioValue.Cast< int >(); return true; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"AA") ) { AA=ioValue.Cast< int >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"WIDTH") ) { WIDTH=ioValue.Cast< int >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"HEIGHT") ) { HEIGHT=ioValue.Cast< int >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"GRAPHIC") ) { GRAPHIC=ioValue.Cast< int >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"ratingList") ) { ratingList=ioValue.Cast< ::Array< ::String > >(); return true; }
	}
	return false;
}

void ComboPopup_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("ratingPosition",e6,75,e3,e8));
	outFields->push(HX_("numberPosition",92,54,a8,4c));
	outFields->push(HX_("breakPosition",88,d8,79,7e));
	outFields->push(HX_("ratingScale",2d,01,4f,63));
	outFields->push(HX_("numberScale",01,7f,57,00));
	outFields->push(HX_("breakScale",4b,85,b7,b2));
	outFields->push(HX_("accelScale",82,39,94,30));
	outFields->push(HX_("velocityScale",2d,73,50,23));
	outFields->push(HX_("ratingInfo",2b,6b,e7,01));
	outFields->push(HX_("numberInfo",d7,83,54,84));
	outFields->push(HX_("comboBreakInfo",9f,92,2c,13));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ComboPopup_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(ComboPopup_obj,ratingPosition),HX_("ratingPosition",e6,75,e3,e8)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(ComboPopup_obj,numberPosition),HX_("numberPosition",92,54,a8,4c)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(ComboPopup_obj,breakPosition),HX_("breakPosition",88,d8,79,7e)},
	{::hx::fsFloat,(int)offsetof(ComboPopup_obj,ratingScale),HX_("ratingScale",2d,01,4f,63)},
	{::hx::fsFloat,(int)offsetof(ComboPopup_obj,numberScale),HX_("numberScale",01,7f,57,00)},
	{::hx::fsFloat,(int)offsetof(ComboPopup_obj,breakScale),HX_("breakScale",4b,85,b7,b2)},
	{::hx::fsFloat,(int)offsetof(ComboPopup_obj,accelScale),HX_("accelScale",82,39,94,30)},
	{::hx::fsFloat,(int)offsetof(ComboPopup_obj,velocityScale),HX_("velocityScale",2d,73,50,23)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ComboPopup_obj,ratingInfo),HX_("ratingInfo",2b,6b,e7,01)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ComboPopup_obj,numberInfo),HX_("numberInfo",d7,83,54,84)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ComboPopup_obj,comboBreakInfo),HX_("comboBreakInfo",9f,92,2c,13)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo ComboPopup_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &ComboPopup_obj::GRAPHIC,HX_("GRAPHIC",88,2e,db,f3)},
	{::hx::fsInt,(void *) &ComboPopup_obj::WIDTH,HX_("WIDTH",e6,ed,50,48)},
	{::hx::fsInt,(void *) &ComboPopup_obj::HEIGHT,HX_("HEIGHT",e7,b3,ce,b4)},
	{::hx::fsInt,(void *) &ComboPopup_obj::AA,HX_("AA",e0,38,00,00)},
	{::hx::fsInt,(void *) &ComboPopup_obj::X,HX_("X",58,00,00,00)},
	{::hx::fsInt,(void *) &ComboPopup_obj::Y,HX_("Y",59,00,00,00)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &ComboPopup_obj::ratingList,HX_("ratingList",1b,4f,df,03)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ComboPopup_obj_sMemberFields[] = {
	HX_("ratingPosition",e6,75,e3,e8),
	HX_("numberPosition",92,54,a8,4c),
	HX_("breakPosition",88,d8,79,7e),
	HX_("ratingScale",2d,01,4f,63),
	HX_("numberScale",01,7f,57,00),
	HX_("breakScale",4b,85,b7,b2),
	HX_("accelScale",82,39,94,30),
	HX_("velocityScale",2d,73,50,23),
	HX_("ratingInfo",2b,6b,e7,01),
	HX_("numberInfo",d7,83,54,84),
	HX_("comboBreakInfo",9f,92,2c,13),
	HX_("setScales",eb,5f,cd,9b),
	HX_("comboPopup",fe,76,8a,d4),
	HX_("ratingPopup",cf,3c,15,b1),
	HX_("breakPopup",ed,c0,7d,00),
	::String(null()) };

static void ComboPopup_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ComboPopup_obj::GRAPHIC,"GRAPHIC");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::WIDTH,"WIDTH");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::HEIGHT,"HEIGHT");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::AA,"AA");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::X,"X");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::Y,"Y");
	HX_MARK_MEMBER_NAME(ComboPopup_obj::ratingList,"ratingList");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ComboPopup_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::GRAPHIC,"GRAPHIC");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::WIDTH,"WIDTH");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::HEIGHT,"HEIGHT");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::AA,"AA");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::X,"X");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(ComboPopup_obj::ratingList,"ratingList");
};

#endif

::hx::Class ComboPopup_obj::__mClass;

static ::String ComboPopup_obj_sStaticFields[] = {
	HX_("GRAPHIC",88,2e,db,f3),
	HX_("WIDTH",e6,ed,50,48),
	HX_("HEIGHT",e7,b3,ce,b4),
	HX_("AA",e0,38,00,00),
	HX_("X",58,00,00,00),
	HX_("Y",59,00,00,00),
	HX_("ratingList",1b,4f,df,03),
	::String(null())
};

void ComboPopup_obj::__register()
{
	ComboPopup_obj _hx_dummy;
	ComboPopup_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ComboPopup",1e,7b,3b,cb);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ComboPopup_obj::__GetStatic;
	__mClass->mSetStaticField = &ComboPopup_obj::__SetStatic;
	__mClass->mMarkFunc = ComboPopup_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ComboPopup_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ComboPopup_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ComboPopup_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ComboPopup_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ComboPopup_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ComboPopup_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ComboPopup_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_29_boot)
HXDLIN(  29)		GRAPHIC = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_30_boot)
HXDLIN(  30)		WIDTH = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_31_boot)
HXDLIN(  31)		HEIGHT = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_32_boot)
HXDLIN(  32)		AA = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_34_boot)
HXDLIN(  34)		X = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_35_boot)
HXDLIN(  35)		Y = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_071b8be456fac389_37_boot)
HXDLIN(  37)		ratingList = ::Array_obj< ::String >::fromData( _hx_array_data_cb3b7b1e_20,4);
            	}
}

