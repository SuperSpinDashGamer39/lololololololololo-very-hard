// Generated by Haxe 4.1.5
#ifndef INCLUDED_ImageCache
#define INCLUDED_ImageCache

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ImageCache)
HX_DECLARE_CLASS2(flixel,graphics,FlxGraphic)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)



class HXCPP_CLASS_ATTRIBUTES ImageCache_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ImageCache_obj OBJ_;
		ImageCache_obj();

	public:
		enum { _hx_ClassId = 0x5b5687c7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ImageCache")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"ImageCache"); }

		inline static ::hx::ObjectPtr< ImageCache_obj > __new() {
			::hx::ObjectPtr< ImageCache_obj > __this = new ImageCache_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ImageCache_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ImageCache_obj *__this = (ImageCache_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ImageCache_obj), false, "ImageCache"));
			*(void **)__this = ImageCache_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ImageCache_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ImageCache",07,65,93,43); }

		static void __boot();
		static  ::haxe::ds::StringMap cache;
		static void add(::String path);
		static ::Dynamic add_dyn();

		static  ::flixel::graphics::FlxGraphic get(::String path);
		static ::Dynamic get_dyn();

		static bool exists(::String path);
		static ::Dynamic exists_dyn();

};


#endif /* INCLUDED_ImageCache */ 
